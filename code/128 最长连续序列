"""
给定一个未排序的整数数组，找出最长连续序列的长度。

要求算法的时间复杂度为 O(n)。

示例:

输入: [100, 4, 200, 1, 3, 2]
输出: 4
解释: 最长连续序列是 [1, 2, 3, 4]。它的长度为 4。

"""


class Solution(object):
    def longestConsecutive(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        A = set(nums)

        def find_left_and_right(n):
            if n in A:
                A.remove(n)
                return find_left_and_right(n - 1) + find_left_and_right(n + 1) + 1
            else:
                return 0

        ans = 0
        for i in nums:
            ans = max(ans, find_left_and_right(i))
        return ans


if __name__ == '__main__':
    s = Solution()
    test_list = [100, 4, 200, 1, 3, 2]
    print(s.longestConsecutive(test_list))
